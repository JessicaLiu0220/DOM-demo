{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","contain","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","arr","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","event","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodelist","i","call","index","list"],"mappings":"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","file":"dom.be574493.map","sourceRoot":"../src","sourcesContent":["window.dom = {\n    create(string) {\n        let contain = document.createElement(\"template\")\n        contain.innerHTML = string.trim();\n        return contain.content.firstChild;\n    },\n    after(node, node2) {\n        node.parentNode.insertBefore(node2, node.nextSibling);\n    },\n    before(node, node2) {\n        node.parentNode.insertBefore(node2, node);\n\n    },\n    append(parent, node) {\n        parent.appendChild(node);\n    },\n    wrap(node, parent) {\n        dom.before(node, parent);\n        dom.append(parent, node);\n    },\n    remove(node) {\n        node.parentNode.removeChild(node);\n        return node;\n    },\n    empty(node) {\n        const childNodes = node.childNodes;\n        const arr = [];\n        let x = node.firstChild;\n        while (x) {\n            arr.push(dom.remove(node.firstChild));\n            x = node.firstChild;\n        }\n        return arr;\n    },\n    attr(node, name, value) {\n        if (arguments.length === 3) {\n            node.setAttribute(name, value);\n        } else if (arguments.length === 2) {\n            return node.getAttribute(name);\n        }\n\n    },\n    text(node, content) {//适配\n        if ('innerText' in node) {\n            node.innerText = content;\n        } else {\n            node.textContent = content;\n        }\n\n    },\n    //改html的内容\n    html(node, string) {\n        if (arguments.length === 2) {\n            node.innerHTML = string;\n        } else if (arguments.length === 1) {\n            return node.innerHTML;\n        }\n\n    },\n    //修改样式\n    style(node, name, value) {\n        if (arguments.length === 3) {\n            //dom.style(test,'color','red')\n            node.style[name] = value;\n        } else if (arguments.length === 2) {\n            //判断name的类型是否为字符串\n            if (typeof name === 'string') {\n                //dom.style(test,'color')是字符串就返回其属性\n                return node.style[name];\n\n            } else if (name instanceof Object) {//判断name的类型是不是对象\n                const object = name;\n                for (let key in object) {//修改对象和元素都具有的属性key的值\n                    node.style[key] = object[key];\n                }\n            }\n        }\n    },\n    class: {\n        add(node, className) {\n            node.classList.add(className)\n        },\n        remove(node, className) {\n            node.classList.remove(className)\n        },\n        has(node, className) {\n            return node.classList.contains(className)\n        }\n    },\n    on(node, event, fn) {//添加事件\n        node.addEventListener(event, fn);\n    },\n    off(node, event, fn) {//删除事件\n        node.removeEventListener(event, fn);\n    },\n    find(selector, scope) {\n        return (scope || document).querySelectorAll(selector);  //如果有范围就在范围里查找元素，如果没有就在document中查找\n    },\n    parent(node) {\n        return node.parentNode\n    },\n    children(node) {\n        return node.children;\n    },\n    //获取兄弟节点\n    siblings(node) {//先到父元素然后找到所有的子节点，再变成数组将自己过滤出去\n        return Array.from(node.parentNode.children).filter(n => n !== node)\n    },\n    //查找下一个节点\n    next(node) {\n        let x = node.nextSibling;\n        while (x && x.nodeType === 3) {\n            x = x.nextSibling  //当x是文本时x为下一个兄弟元素\n        }\n        return x;\n    },\n    //查找上一个节点\n    previous(node) {\n        let x = node.previousSibling;\n        while (x && x.nodeType === 3) {\n            x = x.previousSibling  //当x是文本时x为下一个兄弟元素\n        }\n        return x;\n    },\n    //遍历每个元素\n    each(nodelist, fn) {\n        for (let i = 0; i < nodelist.length; i++) {\n            fn.call(null, nodelist[i])\n        }\n    },\n    //查看元素的下标\n    index(node) {\n        let i;\n        const list = dom.children(node.parentNode);\n        for (i = 0; i < list.length; i++) {\n            if (list[i] === node) {\n                break\n            }\n        }\n        return i;\n    }\n};"]}